Version 0.39
------------
simonb: Telnet monitoring dialogue and helper routines fixed up, and optomised
	a little, but not so much as to break dodgey ANSI terminals..
simonb: src/telnet/descriptor directory created; descriptor.cc broken up and
	placed here.
simonb: src/telnet/descriptor/protocol.cc created to handle telnet protocol
	requests
simonb: src/telnet/monitor.cc - Added support for 'from no-one' style notices
	that are generated by some servers (eg. AustNet) as authority style
	notices. These are not from a user, and not from a server. They are
	displayed raw tagged on the end of a IRC line header.
simonb: src/parser/commands.cc - Added support for 'credit finding', which
	randomly selects if a user can 'find' a credit upon joining a channel
	that is both a game channel and has the appropriate credit-finding
	channel flag. This gives the user a random amount of credits, of
	which the maximum is defined in config.h
simonb: src/parser/message.cc - Added support for telling a user to register.
	If the message is sent directly, or is sent to a channel that has the
	talk to non-registered users flag set, DumbOP will tell a user that
	they will have to register if they wish to access a certain command.
simonb: src/parser/message.cc - Patched above addition so it only works with
	commands that are on the base-user level (level USER or NONE).
simonb: Added UserListItem pointer to Person class, primarily for my own
	sanity, but also because every user-command and it's dog seems to
	want to seek for the user who called the command. This should save
	some time, and a lot of code..
simonb: src/irc directory created
simonb: src/server.cc, serverconnection.cc, serverlist.cc moved into 
	src/irc directory
simonb: src/channels/person.cc moved to src/server/person.cc... What was it
	doing in channels in the first place?! :)
simonb: Person class - removed Bot pointer and replaced it with a public
	ServerConnection pointer which should save some memory and processing
	time. (**MASS EDIT**)
simonb: src/ctcp - CTCP-SEX reply changed.
simonb: Bot::checkpoint() added, as well as support for automatic
	checkpointing during the bot life (minimise damage from a crash)
simonb: SAVE command renamed to CHECKPOINT
simonb: sendNotice's in commands changed to sendLine (preferencial sending
	of notice vs. privmsg)
simonb: NSLOOKUP command removed completely (became pointless)
simonb: NICK command removed completely (became pointless too!)
simonb: INVENTORY command added (src/commands/game/inventory.cc)
simonb: Aliased commands are now hidden from being listed in HELP.
simonb: src/channels, src/commands, src/parser and src/queue moved into
	src/irc directory
simonb: src/utils directory renamed to src/common
simonb: src/strings moved to src/common/strings
simonb: src/ctcp.cc moved into src/irc directory
simonb: src/common/ansi.cc broken up and placed into src/telnet/ansi directory
simonb: src/todolist.cc moved into src/irc/queue directory
simonb: src/banentry.cc moved into src/irc directory
simonb: src/mask.cc moved into src/common directory
simonb: src/log.cc moved into src/common directory
simonb: src/bot.cc - Defines moved into src/include/acconfig.h (config.h)
simonb: src/bot.cc split up and moved into src/bot directory
simonb: src/config.cc - Removed.. It was a previous idea but config.h
	overwrote whatever work I had started on it and.. well.. it was just
	a waste of space in the end :(
simonb: src/irc/parser/commands.cc and src/irc/parser/numerics.cc moved into
	new directory src/irc/parser/user as a start to allow for user,
	service or server type connections.
simonb: ServerConnection class modified for future possibility of different
	connection types
simonb: src/irc/server*.cc moved into new directory src/irc/server
simonb: Finally fixed Makefiles so that subdirectory substitutions work
simonb: Fixed up 'STATS <bot nick>' command and restored most of the original
	'statistical nerdiness' into STATS...
simonb: src/games/quiz/*.cc broken down a little more; hints.cc, bump.cc and
	files.cc created.
simonb: src/games/quiz/*.cc colour support added
simonb: src/games/quiz/*.cc configuration support added - default defines now
	set up variables which allow for the possibility of either a
	configuration file style modification or on-line real-time modification
	which may also aid debugging.. Bit of a mass edit here :-/
simonb: src/irc/parser/user/*.cc - Broken up similar to how on-line IRC
	commands were. Each protocol command (commands/numerics) all have one
	file per routine to keep compile times down and editing easier. This
	will unfortunately have the effect of increasing the object file size,
	again... *sigh* :(


Version 0.38
------------
simonb: src/games/class.cc - Split into class.cc and parser.cc
simonb: src/games/parser.cc - Added parseJoin and parseLeave functions
simonb: src/games/quiz/run.cc - Split into run.cc and parser.cc
simonb: src/games/quiz/parser.cc - Added parseJoin and parseLeave functions
simonb: src/utils/ansi.cc - Line-wrapping functionality added to ANSI::toANSI()
simonb: gameQuizChannel::timeAsked changed from time_t to struct timeb to
	allow for millisecond timing
simonb: src/users/list.cc - Channel field in userlist automatically is #*. This
	field is now used for 'registration time'.
simonb: src/commands/*.cc - Split so that each file is now a directory (such as
	channel, connection, dcc, game, general, manager, and user) and
	within each directory each command has its own file. This was done
	due to the size of some of these commands become enormous (especially
	commands which server several purposes such as the CATEGORY command
	in the game directory).
simonb: TelnetDialogue base class created for telnet management dialogue box
	control routines.
simonb: src/telnet/dialogue directory created for dialogue files.
simonb: src/smtp directory created
simonb: src/snmp directory created
simonb: src/version.cc - Changed a few 'things'.. Strings are pulled through
	functions rather than out of the code (this way they are always
	up-to-date per compile)
simonb: src/ctcp.cc - Changed VERSION ctcp responce to suit new version
	'pulling' style :)
simonb: All work and no play makes Simon a dull boy all work and no play makes
	simon a dull boy all work and no play makes simon a dull boy all work
	and no play makes simon a dull boy all work and no play makes simon a
	dull boy all work and no play makes simon a dull boy all work and no
	play makes simon a dull boy all work and no play makes simon... uhh..
simonb: src/utils/ansi.cc - Ported in basic drawing functions from the now
	very old AXS BBS menu/internet connection system (it was in pascal)
simonb: src/telnet/login.cc - Stuff created for a login box to 'work'... 
	sort of.
simonb: src/telnet/descriptor.cc - Terminals make the background normal/bold
	on the status bar (well, monochrome terminals at least) so the bar
	thing is totally normal-reverse instead of having the message bold.
	Did that make any sense?
simonb: src/utils/class.cc - Added repeatChar() routine.
simonb: src/game/quiz/parser.cc - Added support for answering reversed
	questions with reversed answers, and obtaining double the score.
simonb: src/game/quiz/parser.cc - Added support for 'amazingly quick'
	responces from users in a #quiz channel. The bot will tell the time
	a user took to answer a question if it is less than 2.5 seconds
	(configurable with a define)
simonb: src/users/*.cc - 'prot' field changed to 'credits'. Credits are
	planned to be 'earned' by playing games, eg. the quiz game. This way
	some form of scoring and interoperability can be formed. Functions
	related to 'prot' have been left (defaulting to NONE); they will have
	to be rewritten at a later stage when the database controls are 
	redone. (Soon, I hope)
simonb: src/users/*.cc - channelMask field finally removed. It was defaulting
	to '#*', but that's crap so it's gone now :)
simonb: Added 'USERFLAG_HAS_MONEY_TREE' flag.
simonb: src/users/item.cc - created. Includes new functions canAfford(), 
	charge() and pay(), all designed to help the credit system.
simonb: Added credit system to game commands CATEGORY, HINT and CLUE, where
	appropriate.
simonb: Added credit functionality to GameQuiz::parseLine(), adds credits
	depending on points scored, etc.
simonb: Added GIVE command (src/commands/game/give.cc), to give the users the
	ability to be friendly and give mates some credits (may be good for
	gambling addicted 'mates' if I ever write a gambling style game, eg.
	card game or something :)
simonb: Added an include for 'config.h' to every .cc file, finally. This is
	for auto-configure to be implemented properly.
simonb: Added ANSWER command to sneak out the answer to a current question in
	a quiz channel
simonb: src/telnet/dialogue/login directory created, login.cc broken up
	into separate components and placed within this directory to
	lessen the load of each files. This file is big, future dialogue
	files may become enormous depending on their complexity.
simonb: src/smtp directory created for the e-mail engine. This will be for
	e-mail errors, channel logs, statistics, and forwarding notes.
simonb: /src/snmp directory created for the SNMP engine. This will mainly be
	for statistics/tracking etc.
simonb: src/garbage directory created for our own 'Garbo' dude. Our Garbage
	Man will clean out users who haven't visited for ages, old notes,
	and other unwanted things. May also become a socket-killer, too.
simonb: src/telnet/dialogue/monitor directory and dialogue sub-class created
simonb: src/telnet/spy.cc renamed to monitor.cc
simonb: TelnetSpy class split in two and merged with Telnet and
	TelnetDialogueMonitor classes
simonb: src/commands/general/help.cc - HELP command now blocks users from
	getting help on commands they cannot access. It uses a 'blind' system
	which simply declares that it could not find the command in the
	help file, even if it really did.


Version 0.37
------------
simonb: commands/user.cc - Finally wrote password changing code (gee I'm slow)
simonb: games/quiz.cc - Broken up and placed into games/quiz directory
simonb: serverqueue* - Broken up further and placed into queue directory
simonb: Added specific JOIN and WHO sub-classes to the ServerQueueItem class
simonb: telnet/ansi.cc moved to utils directory
simonb: telnet/class.cc split into class.cc and descriptor.cc
simonb: ANSI::telnetHeaderInit and ANSI::telnetHeaderUpdate moved to
	telnetDescriptor::headerInit and telnetDescriptor::headerUpdate
	respectively.
simonb: parser/message.cc - 'did' logging reduced, only shows the command name
	now. More secure (bloody password/register/identify commands!)
simonb: telnet/* - Cleaned up stuff, added support ready for input/ANSI/TELNET
	codes and sequences.
simonb: telnet/descriptor.cc - Added support for different terminals and stuff
simonb: telnet/descriptor.cc - Cleaned up header bar handing stuff, now there
	is a variable message which can be placed in the center of the bar
	between the version string and the time.
simonb: telnet/descriptor.cc - Changed version string and time on header bar
	to be 'normal' text mode, and the bar message to be 'bold'. Looks crap
	on some telnet clients, but ok on dumb terminals (makes more sense to
	me at least :).
simonb: ctcp.cc - Fixed up CTCP responces. We are NOW (beleive me this time,
	please) fully compliant :) Now leave me alone! :)
simonb: HINT command changed to CLUE command.
simonb: game/quiz/channel.cc - Added nextHint() function for auto-hint and
	standard hint on every question support. Needs more work, though.
simonb: CLUE command added.
simonb: channels/channel.cc - Fixed up small oversight, nicks now change
	properly.
simonb: KICKBAN command completely removed.
simonb: CYCLE command converted back to normal.
simonb: commands.cc - Bye bye. (merged with rest of commands in commands
	directory)
simonb: ADDUSER and DELUSER commands removed.
simonb: UserCommands class changed to Commands (plenty of modifications done
	all over the place - eek!)
simonb: channels/channel.cc - DumbOP deletes quiz information when channel
	class is deleted. This is dirty, and undesirable, but at least he will
	not crash when reconnecting, kicked, cycling on quiz channel etc. It
	was ugly, and I can't beleive I overlooked it for so long! :)
simonb: queue/items directory created. *item.cc moved in there to unclutter
	things...
simonb: queue/items/ison.cc created for ISON requests. ServerQueueIsonItem
	created, naturally. Whoosh this version has a lot of 'administrative'
	changed hey? :)
simonb: queue/items/userhost.cc created for USERHOST requestions. Same as
	above, the appropriate class was also created.


Version 0.36
------------
simonb: utils.cc - Re-broke the random() function. Seems the broken version
	actually works, hehehe :) Kluge? Well probably not, but it sorta seems
	like it. Effected random() usage (esp. bumpQuestion in gamequiz.cc)
	have been kluged (or kludged, depending on how 'modern' your hacking
	is) to match the, uhh, strangeness :)
simonb: Ok, ignore that last entry :) I've just had some strong coffee (been
	awake for almost another 24 hours.. eep!) and have looked over that
	whole randomness debarcle.. Uhh, it makes sense! I'm just a moron :(
	On with more important things :)
simonb: Added support for extraordinarily answered questions. Now, any
	question can be answered by giving the answer (as usual) but the
	answer can have appended to it a char (of non-alphanumeric origin)
	and any other extraneous information. This means someone can ask
	if the question is right (answer?) as in 'not sure' and get it right.
simonb: gamecommands.cc - Added more next-category checking to the routines,
	now the current category (equality) and age checking of the categories
	are checked prior to accepting a category as being the next one to
	play.
simonb: gamecommands.cc - When changing the quiz category, the category 
	change is announced to the channel now, rather than just the user 
	who requested the change.
simonb: channel*.cc - Added support for 'rules' and 'greeting' strings - one
	liner messages that channel operators will be able to specify.
simonb: usercommands.cc - Added RULES command. If rules exist, they can be
	requested by the user.
simonb: parser.cc - Added auto-greeting support which will send a notice to
	a user immediately upon joining a channel that has a greeting set.
simonb: usercommands.cc - PASSWORD and IDENT commands obliterated.
simonb: parser.cc & usercommands.cc - REGISTER command added.
simonb: IDENT command changed to IDENTIFY command
simonb: usercommands.cc - split into managercommands.cc, channelcommands.cc,
	generalcommands.cc and usercommands.cc for my own sanity.
simonb: *.h - fixed many files up in preparation for splitting the package
	into logical sections (eg. subdirs and mid-way objects)
simonb: Imported SHA1 routines from Evolution.
simonb: userlist.cc - Added identify function to support password
	identification via the SHA1 digest routines.
simonb: My sanity wasn't dealing with the *commands.cc files well enough
	still, so connectioncommands.cc was spawned from managercommands.cc 
	and dcccommands.cc is ripped from generalcommands.cc
simonb: Imported strings class from evolution (latest class version)
simonb: Signal class and filename (signal.cc/signal.h) renamed to Signals
	(signals.cc and signals.h naturally) to avoid breaking c++-lib .h's
simonb: *commands.cc - Directory created (commands) in the source directory
	for these files, appropriate Makefile has been make.
simonb: games.cc and gamequiz.cc - Directory created (games), and you know
	the rest..
simonb: telnet*.cc, ansi.cc - Directory created (telnet) etc etc..
simonb: parser.cc - Broken up and placed into parser directory. Now three
	files: class.cc, numerics.cc, commands.cc, ctcp.cc, and message.cc
simonb: dcc*.cc - Moved into dcc directory
simonb: channel*.cc and person.cc - Moved into channels directory
simonb: user*.cc - Moved into users directory
simonb: socket.cc and signals.cc - Moved into system directory
simonb: note*.cc - Moved into notes directory
simonb: utils.cc & sha1.cc - Moved into utils directory


Version 0.35
------------
Pickle: usercommands.cc - LASTSEEN command simplified, hopefully now works in
	most (if not all) situations now. This is also in preparation for the
	newer userlist model.
Pickle: gamecommands.cc - Added pointer checking while running through the
	category map. If there is any faulty code, this should be able to
	catch it. Have not added debugging information (there should be some
	output while compiled as DEBUG, right?)
Pickle: gamequiz.cc - Timing routines under attend() written, seem pretty
	solid and configurable.
Pickle: utils.cc - Added random function for random number generation
Pickle: utils.cc - Added dwindleSpaces function to remove white space.
Pickle: .. and fixed a vast array of STUPID bugs that shouldn't have been 
	there in the first place..


Version 0.34
------------
Pickle: ctcp.cc - Fixed bug that was causing IRC servers to get cranky with
	CTCP TIME reply, and clients to get confused between it and a NOTICE.
Pickle: ansi.cc - Fixed top bar code time display; Now uses ctime().
Pickle: Converted numerous time(NULL)'s to use the Bot::currentTime structure
	set in the main loop to reduce number of system calls.
Pickle: utils.cc - Added replaceVowels function
Pickle: utils.cc - Added reverseStr function
Pickle: ansi.cc - Added toANSI function, now using it with TelnetSpy::
	routines.
Pickle: signal.cc - Rough signal code added. Bot will shut down properly upon
	death signals. No support for rehashing via SIGHUP as yet. All other
	superfluous signals ignored. Did I mention 'rough'? hehe :)
Pickle: bot.cc - Changed PING/PONG to only send a string rather than
	waste time referencing memory to get the time. We no longer depend on
	the server reply. AustNET returns a traditional PING (everything sent),
	traditional IRCd returns just the PINGer's nick name. Many networks
	send out either their network name, the options previously mentioned
	or other strings. The RFC's from 2000 tell us the PING data should
	contain the origin. We are going to be technically correct now, but
	in the real world we just cannot rely on it, obviously! :)
Pickle: gamequiz.cc and gamequiz.h created
Pickle: INFO merged into STATS command (dodgey!)
Pickle: MSG command removed
Pickle: CATEGORY command created for quiz game (sketchy so far)
Pickle: bot.cc: Moved receivedLen and sentLen into ServerConnection class
Pickle: serverqueue.cc: Finally added the incrementor for sentLen!!!
Pickle: HINT and REPEAT quiz commands created (shells)
Pickle: telnetspy.cc: Fixed 'bug' (rather, oversight) where signoff messages
	were devoid of their first word.
Pickle: channel.cc: Fixed bug with reading data from the file. It appears I
	neglected a field, which made everything after the mode/topic locks
	off-alignment and causes a slight inconvenience with the flagging
	system. Channel list files should still be replaced with something
	better though, right?


Version 0.33
------------
Pickle: parser.cc - Fixed retarded bug that shouldn't have happened in the
	first place. The bug stopped the bot being hear on channels.
Pickle: Removed 'BEEP' command. It's purpose was both obscure and quite
	useless in many respects other than there to shit people up the wall.
Pickle:	Restricted 'SAY' and 'DO' commands tightly, and removed spoof-breaking
	output (the hidden <=- alias at the end, and the '%%' prefix.)
Pickle: Channels are now read from a separate file, default to bot.channels.
	This now allows for greater flexibility, saving list files etc.
Pickle: bot.cc - Changed currentTime into a structure fit for ftime(). This
	allows for more precise timings to be calculated including millisecond
	length lag checks and ping replies.
Pickle: Various time(NULL) commands have now been replaced with pointers to
	to the existing time(NULL) point found in the Bot::currentTime
	structure. This is more efficient use, using memory instead of a
	system call.
Pickle: Added "PING" command; Ping reply uses the above timing routine to
	provide the user with a highly accurate lag response.
Pickle: parser.cc - Removed CTCP restriction to be destined for users only
	and not channels. The specifications do not specificially mention
	whether or not it is allowed to work in a channel broadcast form. Most
	modern IRC clients, including ircII these days, do allow this which
	allows people who are voiced to CTCP the entire channel. This is most
	likely because most modern servers parse CTCP these days and do 
	restrict channel CTCP's to voiced users within that channel only.
	Hopefully the IRC-3 specs will make this manditory so we can leave it
	like that, because it's kinda handy.


Version 0.32
------------
Pickle: ctcp.cc - Ok, so DumbOP wasn't that compliant afterall. The TIME
	command has been made compliant.
Pickle: ctcp.cc - ECHO command added. _NOW_ we're fully compliant!! :)
Pickle: bot.h - Lag counter PING_TIME changed again from 5 mins to 90 secs
Pickle: bot.h - The non-pinging pinger now pings... :)
Pickle: Makefile - Added stripping to the main MAKE loop. To make a debug-able
	compile, run "make debug", otherwise enjoy the savings :)
Pickle: notelist.cc and notelist.h created, working in list style similar to
	the userlist functions.
Pickle: ansi.h and ansi.cc - updated to conform just above standards (output)
Pickle: bot.cc - Changed ping so that instead of just pinging with PING_TIME
	seconds of inactivity instead of pinging every PING_TIME secs when
	there's no activity on the server. This ensures the lag counter is
	always current within PING_TIME secs. This also seems to stop 
	anti-spoof servers constantly running checks on the DumbOP host.
Pickle: signal.cc & signal.h created - Proper signal handling can now be done. 
Pickle: config.cc & config.h created - Ready for new config format and
	multiple server connections.
Pickle: telnetspy.c - IRCtoANSI added, and does nice TG style ircII conversion


Version 0.31
------------
Pickle: bot.h - Changed server lag counter PING length from 90 secs to 5 mins
Pickle: flags.c created! An enormously ugly flag lookup table has been made
Pickle: ctcp.c and ctcp.h created - CTCP commands have been moved here and
	are executed similar to usercommands.c. The CTCP responce code was
	starting to get a little over the top.
	!!! DUMBOP IS READY TO BE THE MOST CTCP COMPLIANT CLIENT AVAILABLE !!!
	(Better than that bloody eggdrop pile of crap.. Heh heh heh! AND
	 even better than mIRC and ircII. I'm personally impressed! :)
Pickle: dccparser.c & dccparser.h have both been deleted due to the new CTCP
	layout.
Pickle: note.c and note.h created - NOTE command has been added, linking into
	note.c, codebase creation has begin, although cannot really be
	implemented until the database code is finalised and in place.
Pickle: ansi.c, ansi.h, telnet.c, telnet.h, telnetspy.c, telnetspy.h added -
	Ready for the ability to telnet to DumbOP for off-relay maintenance 
	stuff.
Pickle: games.c and games.h created - Implementation of gaming code can begin.
	Game flags from flags.c/flags.h have been moved into their new home.
Pickle: DumbOP now has a bit of the TG smell to it :)
Pickle: version.h and version.c created, version information scattered across
	the files has been moved here now, including the INFO command from 
	usercommands.c
Pickle: parser.c - NULL pointers that might have been followed accidentally
	in loops have been removed.
Pickle: bot.c - Added some debugging output to the init/deinit functions


Version 0.30
------------
Pickle: CHANGELOG created.. DumbOP is now quite the real UNIX production :)
Pickle: Started to add comments in front of commands in usercommands.c.
	Format should probably start to become a standard, as follows in
       	semi-BNF:
	/* <FunctionName> - <Description>
	 * Original <date>, <who> <e-mail address>
	 * <date> <who> - <change made>
	   ...
	 * Needs: <required future modifications>
	   ...
	 */
Pickle: Removed Tkick
Pickle: DumbOP password moved to bot.h as a define (parser.c changed)
Pickle: Changed default nick change time from 1 min to 10 mins
Pickle: bot.c - Added nickop identification after retry wantedNickname attempt


Version 0.29 and beyond
-----------------------
No change log information
